workspace(name = "drake")

load("//:cmake/external/workspace/conversion.bzl", "split_cmake_list")
load("//tools/workspace/python:repository.bzl", "python_repository")
load("//tools/workspace:default.bzl", "add_default_workspace")

# Use Drake's python repository rule to interrogate the interpreter chosen by
# the CMake find_program stanza, in support of compiling our C++ bindings.
python_repository(
    name = "python",
    linux_interpreter_path = "/usr/bin/python3.8",
    macos_interpreter_path = "/usr/bin/python3.8",
)

# Custom repository rules injected by CMake.
local_repository(name = 'cmake_python', path = '/home/drparadox30/petersen_home/drake/external/workspace/cmake_python')


# Tell Bazel which Python we'd like to use for py_binary, py_test, etc.
# The @cmake_python repository came from the BAZEL_WORKSPACE_EXTRA above.
register_toolchains(
    "@cmake_python//:cmake_python_toolchain",
)

# The list of repositories already provided via BAZEL_WORKSPACE_EXTRA.
_BAZEL_WORKSPACE_EXCLUDES = split_cmake_list("cmake_python")

# For anything not already overridden, use Drake's default externals.
add_default_workspace(
    repository_excludes = ["python"] + _BAZEL_WORKSPACE_EXCLUDES,
    toolchain_excludes = ["py"],
)
